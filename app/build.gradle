apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.roy.devil"
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"
    }

    // 引入dataBinding
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    signingConfigs {
        release {
            storeFile file('../sign/jacob.keystore')
            storePassword '123456'
            keyAlias 'max'
            keyPassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            applicationIdSuffix '.debug'
            versionNameSuffix "-debug"
        }
    }

    flavorDimensions "abi", "version"
    productFlavors {
        free {
            dimension 'version'
        }
        paid {
            dimension 'version'
        }
        x86 {
            dimension 'abi'
        }
        arm {
            dimension 'abi'
        }
    }

    // 批量修改apk名称
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if ('release' == variant.buildType.name) {
                outputFileName = "WaterlooBridge_${variant.productFlavors[0].name}_${variant.productFlavors[1].name}" +
                        "_v${variant.versionName}_${buildTime()}.apk"
            }
        }
    }

    lintOptions {
        disable 'Typos'
        abortOnError false
        absolutePaths false
        lintConfig file('lint.xml')
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_11
        sourceCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions { jvmTarget = JavaVersion.VERSION_11 }

    ndkVersion ndk_version
}

static def buildTime() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"

    implementation "com.google.android.material:material:$material_version"
    implementation "com.google.android:flexbox:$flexbox_version"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    implementation "com.github.castorflex.verticalviewpager:library:19.0.1"

//    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"
}
